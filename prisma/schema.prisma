// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  user
  customer
}

enum Status {
  pending
  shipped
  delivered
}

model Auth {
  id     String @id @default(uuid())
  role   Role   @default(user)
  user   User   @relation(fields: [userId], references: [id])
  userId String
  iat    Int
}

model User {
  id              String            @id @default(uuid())
  name            String
  email           String            @unique
  password        String
  role            String
  contactNo       String
  address         String
  profileImg      String
  ReviewAndRating ReviewAndRating[]
  Order           Order[]
  Auth            Auth[]

  @@map("user")
}

model Category {
  id    String @id @default(uuid())
  title String
  book  Book[]

  @@map("category")
}

model Book {
  id              String            @id @default(uuid())
  title           String
  author          String
  price           Float
  genre           String
  publicationDate DateTime
  category        Category          @relation(fields: [categoryId], references: [id])
  categoryId      String
  ReviewAndRating ReviewAndRating[]
  OrderedBook     OrderedBook[]

  @@map("book")
}

model ReviewAndRating {
  id     String @id @default(uuid())
  review String
  rating Int
  user   User   @relation(fields: [userId], references: [id])
  userId String
  book   Book   @relation(fields: [bookId], references: [id])
  bookId String

  @@map("reviewAndRating")
}

model Order {
  id          String        @id @default(uuid())
  user        User          @relation(fields: [userId], references: [id])
  userId      String
  status      Status        @default(pending)
  createdAt   DateTime      @default(now())
  OrderedBook OrderedBook[]

  @@map("order")
}

model OrderedBook {
  id       String @id @default(uuid())
  book     Book   @relation(fields: [bookId], references: [id])
  bookId   String
  quantity Int
  order    Order  @relation(fields: [orderId], references: [id])
  orderId  String
}
